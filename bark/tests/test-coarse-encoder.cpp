/* Usage:

```bash
    ./bin/test-coarse-encoder ../ggml_weights/
```
*/
#include <cstdio>
#include <string>
#include <vector>

#include "bark.h"

const int n_threads = 4;
const bark_verbosity_level verbosity = bark_verbosity_level::MEDIUM;

const bark_sequence semantic_tokens = {
    1913, 8020, 8572, 8572, 1722, 59, 28, 28, 28, 8606, 7695, 7695, 6948, 9488, 92, 28, 107, 9296, 4093, 1640, 1449, 50, 1079, 441, 10, 41, 8275, 847, 8396, 8396, 6747, 7656, 2049, 7656, 5156, 5156, 8865, 178, 50, 178, 1015, 441, 10, 41, 3451, 5737, 2563, 3354, 4382, 734, 4683, 827, 396, 50, 10, 27, 27, 8093, 7401, 937, 937, 937, 259, 2066, 4485, 1385, 1385, 4, 4, 1385, 7588, 660, 252, 252, 252, 663, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96  // this is a dog barking.
};
const bark_sequence semantic_tokens_2 = {
    10, 5785, 10, 6043, 6043, 6043, 6043, 6043, 6043, 4019, 8137, 4166, 5832, 7803, 8010, 8010, 8010, 6174, 6174, 741, 741, 6592, 741, 441, 10, 783, 206, 206, 206, 10, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 344 , 10, 65, 344, 147, 55, 10, 57, 57, 7882, 6863, 6863, 4298, 9111, 9111 , 5862, 5862, 5862, 3741, 657, 120, 171, 2895, 741, 6750, 6750, 10, 2330, 2795 , 2795, 5131, 5131, 2415, 2415, 2130, 880, 8634, 59, 28, 28, 28, 28, 28 , 28, 28, 28, 28, 1133, 5586, 8607, 6799, 4156, 4156, 1177, 326, 326, 741 , 232, 100, 6401, 3670, 5899, 8266, 8266, 4825, 8522, 4323, 7298, 7298, 26, 26 , 26, 1262, 3705, 985, 6844, 441, 441, 5555, 10, 2690, 8428, 10, 985, 7010 , 147, 147, 2907, 2907, 59, 28, 28, 28, 28, 107, 1310, 8968, 8968, 9366 , 9366, 1732, 1732, 1732, 373, 9263, 4480, 4480, 4480, 4480, 4236, 1285, 1285, 1285 , 1285, 1285, 1285, 1285, 1285, 1285, 2997, 2997, 6662, 3761, 3761, 1003, 9293, 83 , 83, 20, 2881, 4978, 5457, 602, 147, 5457, 5457, 5457, 10, 7309, 147, 147 , 147, 217, 8934, 9046, 9510, 9510, 9510, 956, 956, 2320, 2320, 7283, 3088, 3212 , 1152, 3212, 122, 59, 28, 28, 28, 107, 107, 28, 107, 107, 223, 223 , 223, 223, 2784, 206, 230, 206, 1710, 602, 10, 5092, 9862, 10, 55, 206 , 193, 147, 193, 206, 206, 4374, 206, 206, 517, 206, 206, 10, 1278, 1278 , 2089, 147, 147, 10, 57, 604, 7882, 6863, 6863, 4298, 9111, 9111, 5862, 5862 , 9516, 3741, 3599, 120, 120, 1443, 8627, 7274, 1025, 10, 10, 6356, 1878, 8485 , 6703, 8922, 5951, 3506, 2237, 9218, 9218, 4977, 1697, 1697, 3599, 232, 1606, 1620 , 10, 99, 401, 6236, 3573, 9090, 9090, 9090, 298, 128, 5794, 8099, 7610, 389 , 9944, 823, 9456, 9456, 4238, 4238, 3645, 288, 120, 298, 5546, 2921, 2921, 6076 , 3937, 4909, 3937, 6501, 6501, 441, 10, 245, 3623, 3493, 2846, 9056, 9056, 3361 , 1112, 2180, 741, 211, 211, 10, 402, 10, 8934, 2673, 2389, 2389, 4382, 734 , 734, 4683, 9935, 5771, 7901, 232, 232, 10, 27, 27, 3971, 4089, 8844, 6750 , 441, 441, 10, 100, 6200, 3158, 8396, 8396, 8396, 2069, 557, 557, 7901, 741 , 256, 2430, 59, 28, 28, 28, 107, 7883, 6027, 3182, 3182, 3755, 208, 208 , 2462, 232, 10, 6401, 4747, 9818, 7557, 7557, 7557, 208, 208, 5327, 2462, 441 , 10, 10, 41, 4942, 8022, 8022, 8726, 6664, 8726, 8522, 3767, 3767, 3767, 4775 , 6133, 281, 3374, 8376, 8376, 3374, 8376, 441, 8376, 763, 5092, 10, 56, 230 , 56, 230, 147, 206, 206, 206, 206, 5199, 206, 206, 206, 206, 206, 206 , 206, 206, 206, 206, 206, 147, 3252, 206, 91, 2966, 55, 1278, 147, 147 , 147, 55, 3961, 147, 147, 147, 302, 6356, 6513, 6513, 6513, 6513, 6513, 6513 , 6513, 421, 421, 4925, 4925, 4925, 4925, 4925, 7813, 7813, 7813, 1430, 8634, 8811 , 59, 59, 28, 28, 107, 6467, 9569, 5920, 9124, 9124, 5481, 5481, 2507, 2507 , 9921, 422, 215, 215, 215, 6123, 6123, 5916, 5916, 5916, 8184, 4698, 7900, 7900 , 7900, 7900, 664, 749, 278, 749, 749, 10, 5457, 602, 5457, 5457, 147, 55 , 7309, 10, 2330, 3540, 8772, 1430, 1430, 985, 441, 10, 1532, 2384, 8536, 5187 , 8869, 6105, 6105, 6105, 5313, 1471, 1471, 9935, 3561, 1242, 232, 100, 10, 27 , 4168, 4168, 4286, 8634, 8634, 207, 28, 28, 28, 254, 9569, 9569, 5920, 9124 , 5481, 5481, 2507, 2507, 441, 10, 329, 195, 1136, 1136, 3619, 5131, 5131, 1662 , 2415, 741, 10, 5026, 6043, 6043, 9662, 9662, 9002, 7857, 7857, 4786, 4786, 4323 , 4323, 26, 26, 26, 26, 2451, 2451, 10, 10, 266, 206, 206, 206, 206 , 206, 206, 206, 206, 206, 206, 206, 65, 206, 206, 206, 65, 344, 55 , 344, 147, 147, 10, 57, 302, 2201, 2201, 2201, 2201, 5411, 5411, 4554, 7714 , 7714, 2580, 1025, 1025, 1025, 7710, 1973, 1973, 535, 321
};

std::vector<std::vector<int> > transpose(const std::vector<std::vector<int> > data) {
    // this assumes that all inner vectors have the same size and
    // allocates space for the complete result in advance
    std::vector<std::vector<int> > result(data[0].size(),
                                          std::vector<int>(data.size()));
    for (std::vector<int>::size_type i = 0; i < data[0].size(); i++)
        for (std::vector<int>::size_type j = 0; j < data.size(); j++) {
            result[i][j] = data[j][i];
        }
    return result;
}


int main(int argc, char **argv) {
    if (argc < 2) {
        fprintf(stderr, "Usage: %s <model-file>\n", argv[0]);
        return 1;
    }

    const std::string weights_dir = argv[1];

    // initialize bark context
    struct bark_context * bctx = bark_load_model(weights_dir.c_str(), verbosity);
    if (!bctx) {
        fprintf(stderr, "%s: Could not load model\n", __func__);
        exit(1);
    }

    bctx->semantic_tokens = semantic_tokens_2;

    // generate coarse tokens
    if (!bark_forward_coarse_encoder(bctx, n_threads, verbosity)) {
        fprintf(stderr, "%s: failed to forward coarse encoder\n", __func__);
        return 1;
    }

    // print coarse tokens
    fprintf(stderr, "shape of coarse tokens: [%zu, %zu]\n", bctx->coarse_tokens.size(), bctx->coarse_tokens[0].size());

    bark_codes ct = transpose(bctx->coarse_tokens);

    for (size_t i = 0; i < ct.size(); i++) {
        for (size_t j = 0; j < ct[i].size(); j++) {
            fprintf(stderr, "%d ", ct[i][j]);
        }
        fprintf(stderr, "\n");
    }

    return 0;
}